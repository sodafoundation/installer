# Copyright 2018 The OpenSDS Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
# api
- name: check for api release files existed
  stat:
    path: "{{ hotpot_work_dir }}/bin/osdsapiserver"
  register: apireleasesexisted

- name: download and extract the api release tarball if not exists
  unarchive:
    src: "{{ api_download_url }}"
    dest: /tmp/
    remote_src: yes
  when:
    - apireleasesexisted.stat.exists is undefined or apireleasesexisted.stat.exists == false

- name: change the mode of all binary files in api release
  file:
    path: "{{ api_tarball_dir }}/bin"
    mode: 0755
    recurse: yes
  when:
    - apireleasesexisted.stat.exists is undefined or apireleasesexisted.stat.exists == false

- name: copy api tarball into hotpot work directory
  copy:
    src: "{{ api_tarball_dir }}/"
    dest: "{{ hotpot_work_dir }}"
    mode: 0755
  when:
    - apireleasesexisted.stat.exists is undefined or apireleasesexisted.stat.exists == false

# controller
- name: check for controller release files existed
  stat:
    path: "{{ hotpot_work_dir }}/bin/osdslet"
  register: controllerreleasesexisted

- name: download and extract the controller release tarball if not exists
  unarchive:
    src: "{{ controller_download_url }}"
    dest: /tmp/
    remote_src: yes
  when:
    - controllerreleasesexisted.stat.exists is undefined or controllerreleasesexisted.stat.exists == false

- name: change the mode of all binary files in controller release
  file:
    path: "{{ controller_tarball_dir }}/bin"
    mode: 0755
    recurse: yes
  when:
    - controllerreleasesexisted.stat.exists is undefined or controllerreleasesexisted.stat.exists == false

- name: copy controller tarball into hotpot work directory
  copy:
    src: "{{ controller_tarball_dir }}/"
    dest: "{{ hotpot_work_dir }}"
    mode: 0755
  when:
    - controllerreleasesexisted.stat.exists is undefined or controllerreleasesexisted.stat.exists == false

# dock
- name: check for dock release files existed
  stat:
    path: "{{ hotpot_work_dir }}/bin/osdsdock"
  register: dockreleasesexisted

- name: download and extract the dock release tarball if not exists
  unarchive:
    src: "{{ dock_download_url }}"
    dest: /tmp/
    remote_src: yes
  when:
    - dockreleasesexisted.stat.exists is undefined or dockreleasesexisted.stat.exists == false

- name: change the mode of all binary files in dock release
  file:
    path: "{{ dock_tarball_dir }}/bin"
    mode: 0755
    recurse: yes
  when:
    - dockreleasesexisted.stat.exists is undefined or dockreleasesexisted.stat.exists == false

- name: copy dock tarball into hotpot work directory
  copy:
    src: "{{ dock_tarball_dir }}/"
    dest: "{{ hotpot_work_dir }}"
    mode: 0755
  when:
    - dockreleasesexisted.stat.exists is undefined or dockreleasesexisted.stat.exists == false
