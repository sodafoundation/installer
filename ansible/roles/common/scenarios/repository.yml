# Copyright 2018 The OpenSDS Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- set_fact:
    go_path: "{{ lookup('env', 'GOPATH') }}"

- name: check go_path
  shell: "{{ item }}"
  with_items:
    - echo "The environment variable GOPATH must be set and cannot be an empty string!"
    - /bin/false
  when: go_path == ""

# Build api
- name: check for api source code existed
  stat:
    path: "{{ go_path }}/src/github.com/sodafoundation/api"
  register: apiexisted

- name: download api source code if not exists
  git:
    repo: "{{ api_remote_url }}"
    dest: "{{ go_path }}/src/github.com/sodafoundation/api"
    version: "{{ api_repo_branch }}"
  when: apiexisted.stat.exists is undefined or apiexisted.stat.exists == false

- name: build api binary file
  shell: make
  environment:
    GOPATH: "{{ go_path }}"
  args:
    chdir: "{{ go_path }}/src/github.com/sodafoundation/api"


# Build controller
- name: check for controller source code existed
  stat:
    path: "{{ go_path }}/src/github.com/sodafoundation/controller"
  register: controllerexisted

- name: download controller source code if not exists
  git:
    repo: "{{ controller_remote_url }}"
    dest: "{{ go_path }}/src/github.com/sodafoundation/controller"
    version: "{{ controller_repo_branch }}"
  when: controllerexisted.stat.exists is undefined or controllerexisted.stat.exists == false

- name: build controller binary file
  shell: make
  environment:
    GOPATH: "{{ go_path }}"
  args:
    chdir: "{{ go_path }}/src/github.com/sodafoundation/controller"


# Build dock
- name: check for dock source code existed
  stat:
    path: "{{ go_path }}/src/github.com/sodafoundation/dock"
  register: dockexisted

- name: download dock source code if not exists
  git:
    repo: "{{ dock_remote_url }}"
    dest: "{{ go_path }}/src/github.com/sodafoundation/dock"
    version: "{{ dock_repo_branch }}"
  when: dockexisted.stat.exists is undefined or dockexisted.stat.exists == false

- name: build dock binary file
  shell: make
  environment:
    GOPATH: "{{ go_path }}"
  args:
    chdir: "{{ go_path }}/src/github.com/sodafoundation/dock"


- name: copy hotpot binary and openapi files into hotpot work directory
  copy:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
  with_items:
    - { src: "{{ go_path }}/src/github.com/sodafoundation/api/build/out/", dest: "{{ hotpot_work_dir }}" }
    - { src: "{{ go_path }}/src/github.com/sodafoundation/controller/build/out/", dest: "{{ hotpot_work_dir }}" }
    - { src: "{{ go_path }}/src/github.com/sodafoundation/dock/build/out/", dest: "{{ hotpot_work_dir }}" }
    - { src: "{{ go_path }}/src/github.com/sodafoundation/api/openapi-spec/", dest: "{{ hotpot_work_dir }}" }

- name: change the permissions of hotpot executable files
  file:
    path: "{{ hotpot_work_dir }}/bin"
    state: directory
    mode: 0755
    recurse: yes
