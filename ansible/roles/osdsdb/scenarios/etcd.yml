# Copyright 2018 The soda Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: Check if etcd is running
  shell: ps aux | grep etcd | grep {{ etcd_host }}:{{ etcd_port }} | grep -v grep
  ignore_errors: true
  register: service_etcd_status

- name: check for etcd existed
  stat:
    path: "{{ etcd_dir }}/etcd"
  ignore_errors: yes
  register: etcdexisted
  when: service_etcd_status.rc != 0

- name: download etcd
  get_url:
    url={{ etcd_download_url }}
    dest=/opt/{{ etcd_tarball }}
  when:
    - service_etcd_status.rc != 0
    - etcdexisted.stat.exists is undefined or etcdexisted.stat.exists == false

- name: extract the etcd tarball
  unarchive:
    src=/opt/{{ etcd_tarball }}
    dest=/opt/
  when:
    - service_etcd_status.rc != 0
    - etcdexisted.stat.exists is undefined or etcdexisted.stat.exists == false

# Enable etcd as a process
- name: run etcd daemon service
  shell: nohup ./etcd --data-dir {{ etcd_data_dir }} --advertise-client-urls http://{{ etcd_host }}:{{ etcd_port }} --listen-client-urls http://{{ etcd_host }}:{{ etcd_port }}  --listen-peer-urls http://{{ etcd_host }}:{{ etcd_peer_port }} &>>etcd.log &
  become: true
  args:
    chdir: "{{ etcd_dir }}"
  when: install_as_systemd == false and service_etcd_status.rc != 0

# Enable etcd service as systemd process
- name: check for etcd service source file existed
  stat:
    path: "{{ etcd_dir }}/soda-etcd.service"
  register: etcd_service_source_exists
  when: install_as_systemd == true

- name: Check if etcd service source file exists
  debug:
    var: etcd_service_source_exists
    verbosity: 2
  when: install_as_systemd == true

- name: Create the etcd service file
  copy:
    dest: "{{ etcd_dir }}/soda-etcd.service"
    content: |
      [Unit]
      Description=etcd
      Documentation=https://github.com/coreos/etcd

      [Service]
      Type=notify
      Restart=always
      RestartSec=5s
      LimitNOFILE=40000
      TimeoutStartSec=0

      ExecStart={{ etcd_dir }}/etcd --name soda-etcd --data-dir {{ etcd_data_dir }} --listen-client-urls http://{{ etcd_host }}:{{ etcd_port }} --advertise-client-urls http://{{ etcd_host }}:{{ etcd_port }} --listen-peer-urls http://{{ etcd_host }}:{{ etcd_peer_port }}

      [Install]
      WantedBy=multi-user.target
  when:
    - install_as_systemd == true and ( service_etcd_status.rc != 0 and etcd_service_source_exists.stat.exists is undefined or etcd_service_source_exists.stat.exists == false )  
  become: true

- name: check for etcd service file existed
  stat:
    path: "/etc/systemd/system/soda-etcd.service"
  register: etcd_service_exists
  when: install_as_systemd == true

- name: Check if etcd service file exists at systemd
  debug:
    var: etcd_service_exists
    verbosity: 2
  when: install_as_systemd == true

- name: Copy etcd service file to systemd
  copy:
    src: "{{ etcd_dir }}/soda-etcd.service"
    dest: /etc/systemd/system
    owner: root
    group: root
  notify:
    - Reload daemon
    - Start etcd service
  when:
    - install_as_systemd == true and ( service_etcd_status.rc != 0 and etcd_service_source_exists.stat.exists is undefined or etcd_service_source_exists.stat.exists == false )  
  become: true

- name: check etcd cluster health
  shell: ./etcdctl --endpoints http://{{ etcd_host }}:{{ etcd_port }} cluster-health
  become: true
  ignore_errors: true
  args:
    chdir: "{{ etcd_dir }}"
