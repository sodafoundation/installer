# Copyright 2018 The OpenSDS Authors.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: include scenarios/lvm.yml
  include: scenarios/lvm.yml
  when:
    - "'lvm' in enabled_backends"

- name: ceph pre-flight check
  include_tasks: scenarios/ceph_preflight_check.yml
  when:
    - "'ceph' in enabled_backends"

- name: include scenarios/ceph.yml
  include: scenarios/ceph.yml
  when:
    - "'ceph' in enabled_backends"

- name: include scenarios/cinder.yml
  include: scenarios/cinder.yml
  when:
    - use_cinder_standalone == false and "cinder" in enabled_backends

- name: include scenarios/nfs.yml
  include: scenarios/nfs.yml
  when:
    - "'nfs' in enabled_backends"

- name: include scenarios/cinder_standalone.yml
  include: scenarios/cinder_standalone.yml
  when:
    - use_cinder_standalone == true and "cinder" in enabled_backends

- name: configure opensds global info
  shell: |
    cat >> opensds.conf <<OPENSDS_GLOABL_CONFIG_DOC

    [osdsdock]
    api_endpoint = {{ dock_endpoint }}:{{ dock_port }}
    log_file = {{ dock_log_file }}
    # Choose the type of dock resource, only support 'provisioner' and 'attacher'.
    dock_type = {{ dock_type }}
    # Specify which backends should be enabled, sample,ceph,cinder,lvm and so on.
    enabled_backends = {{ enabled_backends }}

    [database]
    endpoint = {{ db_endpoint }}
    driver = {{ db_driver }}
  args:
    chdir: "{{ opensds_config_dir }}"
  become: yes

- name: run osdsdock daemon service
  shell:
    cmd: |
      i=0
      while
        i="$((i+1))"
        [ "$i" -lt 4 ]
      do
        nohup bin/osdsdock > osdsdock.out 2> osdsdock.err < /dev/null &
        sleep 5
        ps aux | grep osdsdock | grep -v grep && break
      done
  args:
    chdir: "{{ hotpot_work_dir }}"
  when:
    - install_from != "container"

- name: run osdsdock containerized service
  docker_container:
    name: osdsdock
    image: "{{ dock_docker_image }}"
    state: started
    network_mode: host
    privileged: true
    volumes:
    - "/etc/opensds:/etc/opensds"
    - "/etc/ceph:/etc/ceph"
    - "/dev/:/dev/"
    - "/run/:/run/:shared"
    - "/etc/localtime:/etc/localtime:ro"
    - "/lib/modules:/lib/modules:ro"
  when:
    - install_from == "container"
