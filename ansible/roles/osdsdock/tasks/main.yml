# Copyright (c) 2018 Huawei Technologies Co., Ltd. All Rights Reserved.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---
- name: include scenarios/lvm.yml
  include: scenarios/lvm.yml
  when: deploy_project != "gelato" and "lvm" in enabled_backend

- name: include scenarios/ceph.yml
  include: scenarios/ceph.yml
  when: deploy_project != "gelato" and "ceph" in enabled_backend

- name: include scenarios/cinder.yml
  include: scenarios/cinder.yml
  when:
   - deploy_project != "gelato" and "cinder" in enabled_backend
   - use_cinder_standalone == false

- name: include scenarios/cinder_standalone.yml
  include: scenarios/cinder_standalone.yml
  when: 
   - deploy_project != "gelato" and "cinder" in enabled_backend
   - use_cinder_standalone == true
 
- name: run osdsdock daemon service
  shell:
    cmd: |
      i=0
      while
        i="$((i+1))"
        [ "$i" -lt 4 ]
      do
        nohup bin/osdsdock > osdsdock.out 2> osdsdock.err < /dev/null &
        sleep 5
        ps aux | grep osdsdock | grep -v grep && break
      done
  args:
    chdir: "{{ hotpot_work_dir }}"
  when: deploy_project != "gelato" and install_from != "container"

- name: run osdsdock containerized service
  docker_container:
    name: osdsdock
    image: "{{ dock_docker_image }}"
    state: started
    network_mode: host
    privileged: true
    volumes:
    - "/etc/opensds:/etc/opensds"
    - "/etc/ceph:/etc/ceph"
    - "/dev/:/dev/"
    - "/run/:/run/:shared"
    - "/etc/localtime:/etc/localtime:ro"
    - "/lib/modules:/lib/modules:ro"
  when: deploy_project != "gelato" and install_from == "container"
