# Default values for opensds.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Select what to deploy
deployments:
  # Specify if to deploy dashboard service
  osdsdashboard: true
  # Specify if to deploy authchecker service
  osdsauthchecker: true

# osdsapiserver spec
osdsapiserver:
  name: apiserver
  replicaCount: 1

  image: sodafoundation/apiserver:v1.0.0

  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the apiserver's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      # securePort: 30040
  # Apiserver resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 20Mi
    limits:
      cpu: 100m
      memory: 30Mi

# osdslet spec
osdslet:
  name: controller
  replicaCount: 1

  image: sodafoundation/controller:v1.0.0

  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the controller's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      # securePort: 30049
  # Controller resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 20Mi
    limits:
      cpu: 100m
      memory: 30Mi

# osdsdock spec
osdsdock:
  name: dock
  replicaCount: 1

  image: sodafoundation/dock:v1.1.0

  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the dock's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      # securePort: 30050
  # Dock resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 30Mi
    limits:
      cpu: 100m
      memory: 40Mi

# osdsdashboard spec
osdsdashboard:
  name: dashboard
  replicaCount: 1

  image: sodafoundation/dashboard:v1.1.0

  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the dashboard's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: NodePort
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      securePort: 31975
  # Dashboard resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 200Mi

# osdsdb spec
osdsdb:
  name: db
  replicaCount: 1
  image: quay.io/coreos/etcd:latest
  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the database's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      # securePort: 30050
  # Database resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 30Mi
    limits:
      cpu: 100m
      memory: 40Mi

# osdsauthchecker spec
osdsauthchecker:
  name: authchecker
  replicaCount: 1
  image: opensdsio/opensds-authchecker:latest
  # ImagePullPolicy: valid values are "IfNotPresent", "Never", and "Always"
  imagePullPolicy: IfNotPresent
  # Attributes of the authchecker's service resource
  service:
    # Type of service; valid values are "LoadBalancer", "NodePort" and "ClusterIP"
    # NodePort is useful if deploying on bare metal or hacking locally on
    # minikube
    type: ClusterIP
    # Further configuration for services of type NodePort
    nodePort:
      # Available port in allowable range (e.g. 30000 - 32767 on minikube)
      # The TLS-enabled endpoint will be exposed here
      # securePort: 30050
  # Authchecker resource requests and limits
  resources:
    requests:
      cpu: 100m
      memory: 100Mi
    limits:
      cpu: 100m
      memory: 200Mi
